---
# Package: Environment / Environment

# Global Disaster Alert and Coordination System (GDACS)
# Information about major droughts, earthquakes, floods,
# tropical cyclones, tsunamis and volcanic activities worldwide
# https://www.home-assistant.io/integrations/gdacs/
# radius in km, default is 500
# gdacs:
#   categories:
#     - Drought
#     - Earthquake
#     - Flood
#     # - Tropical Cyclone
#     - Tsunami
#     # - Volcano
#   radius: 1000
#   latitude: !secret home_latitude
#   longitude: !secret home_longitude

# GeoJSON
# Integrate GeoJSON feeds
# https://www.home-assistant.io/integrations/geo_json_events/
# geo_location:
#   # U.S. Geological Survey Earthquake Hazards (USGS)
#   # https://www.home-assistant.io/integrations/usgs_earthquakes_feed/
#   - platform: usgs_earthquakes_feed
#     feed_type: "past_month_all_earthquakes"
#     radius: 50
#     minimum_magnitude: 0.0
#     latitude: !secret home_latitude
#     longitude: !secret home_longitude

# Binary Sensors
binary_sensor:
  # Trend
  #
  # https://www.home-assistant.io/integrations/trend/
  #
  - platform: trend

    sensors:
      outdoor_temperature_falling:
        entity_id: sensor.outdoor_temperature
        device_class: cold
        friendly_name: "Temperature falling"
        sample_duration: 7200
        max_samples: 120
        min_gradient: -0.0008

      outdoor_temperature_rising:
        entity_id: sensor.outdoor_temperature
        device_class: heat
        friendly_name: "Temperature rising"
        sample_duration: 7200
        max_samples: 120
        min_gradient: 0.0008

# MQTT Sensor
# https://www.home-assistant.io/integrations/sensor.mqtt/

# SwitchDoc Labs WeatherSense Wireless WeatherRack2

# Topic: weathersense/FT020T
# Payload:
# {
#     "time": "2021-11-14 07:47:33",
#     "model": "SwitchDoc Labs FT020T AIO",
#     "device": 12,
#     "id": 0,
#     "batterylow": 0,
#     "avewindspeed": 16,
#     "gustwindspeed": 20,
#     "winddirection": 75,
#     "cumulativerain": 5679,
#     "temperature": 914,
#     "humidity": 88,
#     "light": 11610,
#     "uv": 17,
#     "mic": "CRC"
# }

mqtt:
  sensor:
    # the following bool needs fixing, see https://medium.com/opsops/wft-bool-filter-in-ansible-e7e2fd7a148f
    - name: Weatherstation Battery
      state_topic: "weathersense/FT020T"
      # value_template: "{{ value_json.batterylow | bool }}"
      unique_id: weatherstation_battery
      value_template: "{{ value_json.batterylow | int(0) }}"

    - name: Weatherstation Windspeed avg
      state_topic: "weathersense/FT020T"
      unit_of_measurement: "m/s"
      unique_id: weatherstation_windspeed_avg
      value_template: "{{ value_json.avewindspeed | float(0.0) / 10.0 | round(1) }}"

    - name: Weatherstation Windspeed Gust
      state_topic: "weathersense/FT020T"
      unit_of_measurement: "m/s"
      unique_id: weatherstation_windspeed_gust
      value_template: "{{ value_json.gustwindspeed | float(0.0) / 10.0 | round(1) }}"

    - name: Weatherstation Wind Direction
      state_topic: "weathersense/FT020T"
      unit_of_measurement: "°"
      unique_id: weatherstation_wind_direction
      value_template: "{{ value_json.winddirection | int(0) }}"

    - name: Weatherstation Cumulative Rain
      state_topic: "weathersense/FT020T"
      unit_of_measurement: "mm"
      unique_id: weatherstation_cumulative_rain
      value_template: "{{ value_json.cumulativerain | float(0.0) / 10.0 | round(1) }}"

    - name: Weatherstation Temperature
      state_topic: "weathersense/FT020T"
      device_class: temperature
      state_class: measurement
      unit_of_measurement: "°C"
      unique_id: weatherstation_temperature
      value_template: "{{ ((((( value_json.temperature | float(0.0) ) - 400) / 10.0) - 32) * 5/9) | round(1) }}"

    - name: Weatherstation Humidity
      state_topic: "weathersense/FT020T"
      device_class: humidity
      state_class: measurement
      unit_of_measurement: "%"
      unique_id: weatherstation_humidity
      value_template: "{{ value_json.humidity | int(0) }}"

    - name: Weatherstation Light
      state_topic: "weathersense/FT020T"
      device_class: illuminance
      unit_of_measurement: "klux"
      unique_id: weatherstation_light
      value_template: "{{ value_json.light | float(0.0) / 1000.0 | round(1) }}"

    - name: Weatherstation UV
      state_topic: "weathersense/FT020T"
      unit_of_measurement: "UV Index"
      unique_id: weatherstation_uv
      value_template: "{{ value_json.uv | float(0.0) / 10.0 | round(1) }}"

# Sensors

sensor:
  # - platform: derivative
  #   source: sensor.outdoor_temperature
  #   name: Outdoor temperature change per hour
  #   round: 1
  #   unit_time: h # the resulting "unit_of_measurement" will be °C/h if the sensor.temperate has set °C as it's unit
  #   time_window: "00:30:00" # we look at the change over the last half hour

  # Average
  # https://github.com/Limych/ha-average
  # - platform: average
  #   name: "Average Outdoor Temperature"
  #   entities:
  #     - sensor.outdoor_temperature

  # CO2 Signal
  # CO2 intensity of a specific region
  # https://www.home-assistant.io/integrations/co2signal/
  # - platform: co2signal
  #   token: !secret co2signal_api_key
  #   latitude: !secret home_latitude
  #   longitude: !secret home_longitude

  # World Air Quality Index
  #
  # https://www.home-assistant.io/integrations/waqi/
  #
  - platform: waqi
    token: !secret waqi_token
    locations:
      - adelaide

# Thermal Comfort
#
# https://github.com/dolezsa/thermal_comfort
#
thermal_comfort:
  - custom_icons: true
    sensor:
      - name: Indoor Thermal Comfort
        temperature_sensor: sensor.indoor_temperature
        humidity_sensor: sensor.indoor_humidity
        sensor_types:
          - absolute_humidity
          - heat_index
          - humidex
          - humidex_perception
          - thermal_perception
      - name: Outdoor Thermal Comfort
        temperature_sensor: sensor.outdoor_temperature
        humidity_sensor: sensor.outdoor_humidity
        sensor_types:
          - absolute_humidity
          - heat_index
          - dew_point
          - humidex
          - humidex_perception
          - thermal_perception
          - frost_point
          - frost_risk

# Template
#
# https://www.home-assistant.io/integrations/template
#
template:
  - binary_sensor:
      - name: "Poor Air Quality"
        state: "{{ states('sensor.waqi_adelaide_cbd') | int(0) > 100 }}"
      - name: "UV High"
        state: "{{ states('sensor.weatherstation_uv') | float(0.0) > 5.0 }}"
      - name: "Weatherstation Battery Low"
        state: "{{ states('sensor.weatherstation_battery') | int(0) == 1 }}"

  - sensor:
      - name: "Outdoor Temperature"
        device_class: temperature
        state: >
          {% set state = states('sensor.weatherstation_temperature') | float(0.0) %}
          {% if is_number(state) and state > 0.0 and state < 50.0 %}
            {{ state }}
          {% endif %}
        state_class: measurement
        unit_of_measurement: "°C"

      - name: "Outdoor Humidity"
        device_class: humidity
        state: >
          {% set state = states('sensor.weatherstation_humidity') | float(0.0) %}
          {% if is_number(state) and state > 0.0 and state < 100.0 %}
            {{ state }}
          {% endif %}
        state_class: measurement
        unit_of_measurement: "%"

        # Based on https://community.home-assistant.io/t/template-sensor-wind-direction/297574/17
      - name: "Wind Direction"
        state: >
          {%- if states('sensor.weatherstation_windspeed_avg') | float(0.0) < 0.1 -%}
          CALM
          {%- else -%}
          {% set direction = ['N','NNE','NE','ENE','E','ESE','SE','SSE','S','SSW','SW','WSW','W','WNW','NW','NNW','N'] %}
          {% set degree = states('sensor.weatherstation_wind_direction')|float %}
          {{ direction[((degree+11.25)/22.5)|int] }}
          {%- endif -%}

#######################################################################
# Automations

# Source: https://www.home-assistant.io/integrations/openuv
automation:
  - alias: "Update OpenUV"
    id: update_openuv
    trigger:
      # Time pattern of /45 will not work as expected, as it will sometimes be true
      # twice per hour (on the whole hour and on the whole hour + 45 minutes); use a
      # more frequent time pattern and a condition to get the intended behavior:
      - platform: time_pattern
        minutes: "/15"
    condition:
      - condition: sun
        after: sunrise
        before: sunset
        # The last call will most likely fall before the sunset, leaving the UV index at
        # something other than 0 for the remainder of the night; to fix this, we allow
        # one more service call after the sun has set:
        before_offset: "+00:45:00"
      - condition: template
        # We check if the last trigger has been 40 minutes or more ago so we don't run
        # into timing issues; by checking for 40 minutes or greater, we ensure this is
        # only true at the 45 minute mark:
        value_template: >-
          {{
            state_attr('automation.update_openuv', 'last_triggered') == None
            or (
              now() - state_attr('automation.update_openuv', 'last_triggered')
            ) >= timedelta(hours = 0, minutes = 40)
          }}
    action:
      service: homeassistant.update_entity
      target:
        entity_id:
          # Update both UV and protection window data:
          - binary_sensor.protection_window
          - sensor.current_uv_index

  - alias: UV High Alert
    id: alert_uv_high
    trigger:
      platform: state
      entity_id: binary_sensor.uv_high
      from: "off"
      to: "on"
    condition:
      condition: template
      value_template: >
        {{ as_timestamp(state_attr('automation.uv_high_alert','last_triggered')) | timestamp_custom('%-d') != as_timestamp(now()) | timestamp_custom('%-d') }}
    action:
      service: notify.mobile_app_nokia_5_3
      data:
        message: >
          "{{ trigger.to_state.attributes.friendly_name }}"

  #######################################################################
  # healthchecks

  # - alias: Weatherstation no update notification
  #   id: weatherstation_no_update
  #   description: ""
  #   mode: single
  #   trigger:
  #     - platform: homeassistant
  #       event: start
  #     - platform: mqtt
  #       topic: weathersense/FT020T/#
  #       id: health_weatherstation
  #   condition: []
  #   action:
  #     - delay:
  #         hours: 0
  #         minutes: 10
  #         seconds: 0
  #         milliseconds: 0
  #     - service: notify.mobile_app_nokia_5_3
  #       data:
  #         message: >
  #           "Weatherstation offline"

  # - alias: Cold weather Automations
  #   trigger:
  #   - platform: template
  #     value_template: '{{ is_state(''sensor.season'', ''autumn'') }}'
  #   - platform: template
  #     value_template: '{{ is_state(''sensor.season'', ''winter'') }}'
  #   action:
  #   - service: homeassistant.turn_on
  #     entity_id: automation.temperature_outside_higher_than_inside
  #   - service: homeassistant.turn_off
  #     entity_id: automation.temperature_outside_higher_than_inside

#######################################################################
# Utility Meter
#
# provides functionality to track consumptions of various utilities (e.g., energy, gas, water, heating).
# cycles: quarter-hourly, hourly, daily, weekly, monthly, bimonthly, quarterly and yearly
#
# https://www.home-assistant.io/integrations/utility_meter/
#
utility_meter:
  rainfall_daily:
    source: sensor.weatherstation_cumulative_rain
    cycle: daily
  rainfall_monthly:
    source: sensor.weatherstation_cumulative_rain
    cycle: monthly
  rainfall_annual:
    source: sensor.weatherstation_cumulative_rain
    cycle: yearly
