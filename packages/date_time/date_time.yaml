---
# Package: Date & Time / Data & Time

# Binary Sensors
#
# https://www.home-assistant.io/integrations/binary_sensor/
#
binary_sensor:
  # Workday
  #
  # Indicates whether the current day is a workday or not.
  #
  # https://www.home-assistant.io/integrations/workday/
  #
  - platform: workday
    country: AU
    province: SA
    workdays: [mon, tue, wed, thu, fri]

# Sensors
#
# https://www.home-assistant.io/integrations/sensor/
#
sensor:
  # Time and Date
  #
  # https://www.home-assistant.io/integrations/time_date/
  #
  - platform: time_date
    display_options:
      - "time"
      - "date"
      - "date_time"
      - "date_time_utc"
      - "date_time_iso"
      - "time_date"
      - "time_utc"
      - "beat"

  # World Times
  #
  # Current time in a different time zone
  #
  # https://www.home-assistant.io/integrations/worldclock/
  #
  - platform: worldclock
    name: Time in London
    time_zone: Europe/London

  - platform: worldclock
    name: Time in Perth
    time_zone: Australia/Perth

  - platform: worldclock
    name: Time in Auckland
    time_zone: Pacific/Auckland

# Templates
#
# https://www.home-assistant.io/integrations/template/
#
template:
  - sensor:
      # Period of the day
      # https://community.home-assistant.io/t/automations-with-dusk-dawn-night-and-day-period/48071/3
      - name: "Period of day"
        unique_id: period_of_day
        state: >-
          {% if (as_timestamp(states.sun.sun.attributes.next_dusk)) - (as_timestamp(states.sun.sun.attributes.next_setting)) < 0 %}
            Dusk
          {% elif (as_timestamp(states.sun.sun.attributes.next_rising)) - (as_timestamp(states.sun.sun.attributes.next_dawn)) < 0 %}
            Dawn
          {% elif (states.sun.sun.attributes.elevation) < -4 %}
            Night
          {% else %}
            Day
          {% endif %}
        icon: >-
          {% if (as_timestamp(states.sun.sun.attributes.next_dusk)) - (as_timestamp(states.sun.sun.attributes.next_setting)) < 0 %}
            mdi:weather-sunset-down
          {% elif (as_timestamp(states.sun.sun.attributes.next_rising)) - (as_timestamp(states.sun.sun.attributes.next_dawn)) < 0 %}
            mdi:weather-sunset-up
          {% elif (states.sun.sun.attributes.elevation) < -4 %}
            mdi:weather-night
          {% else %}
            mdi:weather-sunny
          {% endif %}

      - name: Time
        unique_id: time_format
        state: "{{ strptime(states('sensor.time'), '%I:%M %p', default='n/a') }}"

      - name: Time (UTC)
        unique_id: time_utc_format
        state: "{{ strptime(states('sensor.time_utc'), '%I:%M %p', default='n/a') }}"

      - name: Date
        unique_id: date_format
        state: "{{ as_timestamp(states('sensor.date'),default='n/a') | timestamp_custom('%A %d %B %Y', true) }}"
